<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on A Better Tomorrow</title><link>https://j2e4.github.io/tags/javascript/</link><description>Recent content in JavaScript on A Better Tomorrow</description><generator>Hugo</generator><language>ko-KR</language><lastBuildDate>Thu, 23 Nov 2023 21:47:56 +0900</lastBuildDate><atom:link href="https://j2e4.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Debounce, 마지막 이벤트만 처리하기 (cf. Throttle)</title><link>https://j2e4.github.io/post/debounce/</link><pubDate>Thu, 02 Mar 2023 00:21:36 +0900</pubDate><guid>https://j2e4.github.io/post/debounce/</guid><description>디바운스는 동일한 이벤트가 연달아 발생할 때 마지막 이벤트를 감지해 처리하는 이벤트 처리 방식이에요.
마지막 이벤트가 발생하고 개발자가 지정한 시간 이후에 Callback을 실행합니다.
디바운스를 구현하는 방법은 이벤트가 발생할 때마다 새로운 타이머를 설정해주면 돼요.
그러다 어느 순간부터 이벤트가 발생하지 않으면 새로운 타이머를 설정하지 않을 거에요.
그럼 마지막 이벤트가 설정한 타이머에 의해 Callback을 실행하게 됩니다.
저는 resize 이벤트를 핸들링하는 로직, 사용자 입력에 실시간으로 반응할 필요가 없는 동작을 구현할 때 디바운스를 종종 사용해요.
예를 들어 &amp;lt;input /&amp;gt; 입력 필드에 사용자가 입력한 값이 validation 조건에 맞지 않는 경우 힌트 메시지를 보여줘야 한다고 해볼께요.</description></item></channel></rss>